import{Q as i}from"./index-DHNzvIoL.js";const u=i("questions",{state:()=>({questions:[],isLoading:!1,error:null}),getters:{getQuestionById:e=>s=>e.questions.find(t=>t.id===s),getAnswersForQuestion:e=>s=>e.questions.find(n=>n.id===s)?.answers||[],getCheckedAnswers:e=>s=>e.questions.find(n=>n.id===s)?.answers.filter(n=>n.check)||[],getSelectedAnswersCountPerAuthor(){const e=this.questions.flatMap(s=>s.answers).filter(s=>s.check).reduce((s,t)=>(s[t.author]=(s[t.author]||0)+1,s),{});return Object.fromEntries(Object.entries(e).sort(([,s],[,t])=>t-s))}},actions:{async loadQuestions(){this.isLoading=!0,this.error=null;try{const e=await fetch("/questions/pl_president_questions.json");if(!e.ok)throw new Error("Failed to fetch questions");this.questions=await e.json()}catch(e){this.error=e instanceof Error?e.message:"An error occurred"}finally{this.isLoading=!1}},addQuestion(e){const s=Math.max(0,...this.questions.map(t=>t.id))+1;this.questions.push({...e,id:s})},toggleAnswerCheck(e,s){const n=this.questions.find(r=>r.id===e)?.answers.find(r=>r.id===s);n&&(n.check=!n.check)}}});export{u};
